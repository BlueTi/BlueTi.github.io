{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algoritm/programmers/programmers_42583","result":{"data":{"markdownRemark":{"id":"f8356892-b0ba-5d70-903d-28bf89502b7a","html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42583\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://programmers.co.kr/assets/bi-symbol-light-49a242793b7a8b540cfc3489b918e3bb2a6724f1641572c14c575265d7aeea38.png\" alt=\"프로그래머스\"></a></p>\n<div style=\"text-align:center\"><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42583\">https://programmers.co.kr/learn/courses/30/lessons/42583</a></div>\n<ul>\n<li>대기중인 트럭에서 한대씩 꺼낸다.</li>\n<li>다리의 현재하중(bridge<em>weight)를 체크하여 견딜 수 있을 경우 트럭을 올린다(bridge</em>weight+트럭무게,큐에 트럭삽입).</li>\n<li>견디지 못할 경우 큐에 0을 집어 넣는다.</li>\n<li>이 과정을 초마다 해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bridge_length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> weight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> truck_weights<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bridge_weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Queue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> on_bridge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> truck_weights<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>bridge_weight <span class=\"token operator\">&lt;</span> weight <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">&lt;</span> truck_weights<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                time<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                bridge_weight <span class=\"token operator\">+=</span> truck_weights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                on_bridge<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bridge_weight <span class=\"token operator\">></span> weight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                time <span class=\"token operator\">+=</span> bridge_length<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>on_bridge<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    bridge_weight <span class=\"token operator\">-=</span> on_bridge<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>on_bridge<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            time <span class=\"token operator\">+=</span> bridge_length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> time<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/posts/algoritm/programmers/programmers_42583","tagSlugs":["/tag/알고리즘/","/tag/프로그래머스/","/tag/큐/","/tag/문제풀이/","/tag/java/"]},"frontmatter":{"date":"2021-03-25T15:25:37.121Z","description":"프로그래머스 큐 연습문제","tags":["알고리즘","프로그래머스","큐","문제풀이","java"],"title":"다리를 지나는 트럭","socialImage":{"publicURL":"/static/fa3b9336577a6006fbb3a81169f4e8b9/algorithm.png"}}}},"pageContext":{"slug":"/posts/algoritm/programmers/programmers_42583"}},"staticQueryHashes":["251939775","401334301","825871152"]}