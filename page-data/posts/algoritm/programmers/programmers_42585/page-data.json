{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algoritm/programmers/programmers_42585","result":{"data":{"markdownRemark":{"id":"53ec4bff-f8b1-59b8-bca7-814b274241fa","html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42585\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://programmers.co.kr/assets/bi-symbol-light-49a242793b7a8b540cfc3489b918e3bb2a6724f1641572c14c575265d7aeea38.png\" alt=\"프로그래머스\"></a></p>\n<div style=\"text-align:center\"><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42585\">https://programmers.co.kr/learn/courses/30/lessons/42585</a></div>\n<hr>\n<ul>\n<li>주어진 숫자를 붙여 가며 사칙연산을 통과시켜 값을 확인한다.</li>\n<li>N이 1부터 9이하로 주어지니 반복횟수를 맞추기 위해 0부터 8로한다.</li>\n<li>처음 식은 5가 주어지고 사칙연산을 붙일 수 없으니 카운트 1부터 사칙연산으로 나눠진다.</li>\n<li>그런식으로 각 dfs들이 목표 숫자에 도달했을때 최소 값인지 비교하여 대입한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//target과 써야하는 숫자 n을 함수 호출시 매개변수가 늘어나므로 매개변수로 쓰기보다 전역변수로 빼 놓는다.</span>\n    <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>min<span class=\"token operator\">=</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        target <span class=\"token operator\">=</span> number<span class=\"token punctuation\">;</span>\n        n <span class=\"token operator\">=</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//0부터 시작</span>\n        <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> min <span class=\"token operator\">==</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> min<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n\n    <span class=\"token comment\">//카운트는 0부터 8, 이전에 생성된 숫자를 num으로 받는다.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> count<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//count는 0부터 8로 9번 그보다 크면 -1을 돌려준다.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            min <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//생성된 숫자가 목표 값일 경우</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//기존의 목표 생성까지 최소 카운트 값과 비교하여 더 작을 경우 min에 대입한다.</span>\n            min <span class=\"token operator\">=</span> min<span class=\"token operator\">&lt;</span>count<span class=\"token operator\">?</span>min<span class=\"token operator\">:</span>count<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token keyword\">int</span> tempN <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//현재 카운트에서 8까지 접근할 만큼 dfs를 반복한다.</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> newCount <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>newCount<span class=\"token punctuation\">,</span> num <span class=\"token operator\">+</span> tempN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>newCount<span class=\"token punctuation\">,</span> num <span class=\"token operator\">-</span> tempN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>newCount<span class=\"token punctuation\">,</span> num <span class=\"token operator\">*</span> tempN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>newCount<span class=\"token punctuation\">,</span> num <span class=\"token operator\">/</span> tempN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//현재 만든 숫자를 한칸 앞으로 밀고 n을 추가하여 숫자를 만든다.</span>\n            tempN <span class=\"token operator\">=</span> tempN <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/posts/algoritm/programmers/programmers_42585","tagSlugs":["/tag/알고리즘/","/tag/프로그래머스/","/tag/큐/","/tag/문제풀이/","/tag/java/"]},"frontmatter":{"date":"2021-05-30T01:46:37.121Z","description":"프로그래머스 큐 연습문제","tags":["알고리즘","프로그래머스","큐","문제풀이","java"],"title":"N으로 표현","socialImage":{"publicURL":"/static/fa3b9336577a6006fbb3a81169f4e8b9/algorithm.png"}}}},"pageContext":{"slug":"/posts/algoritm/programmers/programmers_42585"}},"staticQueryHashes":["251939775","401334301","825871152"]}