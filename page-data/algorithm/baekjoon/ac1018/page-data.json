{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/algorithm/baekjoon/ac1018/",
    "result": {"data":{"cur":{"id":"164f5526-6368-5700-b264-3a25d69683f3","html":"<p><a href=\"https://www.acmicpc.net/problem/1018\"><img src=\"https://d2gd6pc034wcta.cloudfront.net/images/logo@2x.png\" alt=\"백준\"></a></p>\n<div style=\"text-align:center\"><a href=\"https://www.acmicpc.net/problem/1018\">https://www.acmicpc.net/problem/1018</a></div>\n<hr>\n<ul>\n<li>M _ N 크기의 보드에서 8 _ 8의 체스판을 만드는 문제이다.<br></li>\n<li>자칫하면 처음칸의 색에서 고정으로 생각하기 쉬우나 무슨 색으로 칠하건 횟수가 적은 경우의 수를 출력하는 것이다.<br>\r\n그래서 첫칸이 W일 경우의 수와 B일 경우의 수로 나누어 카운트를 해준다.<br></li>\n<li>카운트 할 경우\n<ul>\n<li>첫칸(0,0)이 W일 경우 -> 행렬 숫자의 합이 짝수&#x26;&#x26; B , 행렬 숫자의 합이 홀수 &#x26;&#x26; W 이면 카운트1 ++<br></li>\n<li>첫칸(0,0)이 B일 경우 -> 행렬 숫자의 합이 짝수&#x26;&#x26; W , 행렬 숫자의 합이 홀수 &#x26;&#x26; B 이면 카운트2 ++</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\r\n\r\nN<span class=\"token punctuation\">,</span>M<span class=\"token operator\">=</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nboard<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    board<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> <span class=\"token number\">64</span>\r\n<span class=\"token keyword\">for</span> r_sub <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>N<span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">for</span> c_sub <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>M<span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        count1<span class=\"token punctuation\">,</span>count2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span>\r\n        start <span class=\"token operator\">=</span> board<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>r_sub<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>c_sub<span class=\"token punctuation\">]</span>\r\n        flag <span class=\"token operator\">=</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>r_sub<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>c_sub<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>r_sub<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>r_sub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">+</span>c_sub<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>c_sub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">+</span>col<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n                    count1<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\r\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n                    count2<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\r\n\r\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">min</span><span class=\"token operator\">></span>count1<span class=\"token punctuation\">:</span><span class=\"token builtin\">min</span><span class=\"token operator\">=</span>count1\r\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">min</span><span class=\"token operator\">></span>count2<span class=\"token punctuation\">:</span><span class=\"token builtin\">min</span><span class=\"token operator\">=</span>count2\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">)</span>\r\n</code></pre></div>","excerpt":"백준 M _ N 크기의 보드에서 8 _ 8의 체스판을 만드는 문제이다. 자칫하면 처음칸의 색에서 고정으로 생각하기 쉬우나 무슨 색으로 칠하건 횟수가 적은 경우의 수를 출력하는 것이다.\r\n그래서 첫칸이 W일 경우의 수와 B일 경우의 수로 나누어 카운트를 해준다. 카운트 할 경우 첫칸(0,0)이 W일 경우 -> 행렬 숫자의 합이 짝수&& B , 행렬 숫자의 합이 홀수 && W 이면 카운트1 ++ 첫칸(0,0)이 B일 경우 -> 행렬 숫자의 합이 짝수&& W , 행렬 숫자의 합이 홀수 && B 이면 카운트2 ++","frontmatter":{"date":"February 21, 2021","title":"체스판 다시 칠하기","categories":"알고리즘","author":"Jard","emoji":"🧢"},"fields":{"slug":"/algorithm/baekjoon/ac1018/"}},"next":{"id":"b649d21c-479b-53de-9ae8-a7f14866c540","html":"<p><a href=\"https://www.acmicpc.net/problem/1158\"><img src=\"https://d2gd6pc034wcta.cloudfront.net/images/logo@2x.png\" alt=\"백준\"></a></p>\n<div style=\"text-align:center\"><a href=\"https://www.acmicpc.net/problem/1158\">https://www.acmicpc.net/problem/1158</a></div>\n<hr>\n<ul>\n<li>\n<p>prev와 next란 배열을 서로 인덱스로 교차하며 배열을 출력한다.</p>\n</li>\n<li>\n<p>n이 7이고 m이 3일 경우 처음 모양은 이러하다.</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">prev</td>\n<td align=\"center\">-1</td>\n<td align=\"center\">0</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">next</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n<td align=\"center\">7</td>\n<td align=\"center\">8</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>prev의 1번째에는 n을 넣고 next의 n번째에는 1을 넣는다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">prev</td>\n<td align=\"center\">-1</td>\n<td align=\"center\"><b>7</b></td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">next</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n<td align=\"center\">7</td>\n<td align=\"center\"><b>1</b></td>\n</tr>\n</tbody>\n</table>\n<br>\n<ul>\n<li>\n<p>i에 next[i]를 넣으면서 탐색을 나가는데 0부터 시작하여 m번 반복한다.<br>\r\ni = (next[0] => next[1] => next[2]) =>3<br>\r\ni = 3<br></p>\n</li>\n<li>\n<p>i 값을 출력해주고 next에 이전 값이 담긴 자리에 다음 위치의 값을 넣는다.<br>\r\nnext[prev[i]] = next[i];<br>\r\nnext[prev[3]] = next[3];<br>\r\nnext[2] = next[3];<br></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">prev</td>\n<td align=\"center\">-1</td>\n<td align=\"center\">7</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">next</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\"><b>4<b></td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n<td align=\"center\">7</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<br>\n<ul>\n<li>그리고 prev 배열에는 출력된 값의 자리에 그 이전 값을 넣는다.<br>\r\nprev[next[i]] = prev[i];<br>\r\nprev[next[3]] = prev[3];<br>\r\nprev[4] = prev[3];<br></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">prev</td>\n<td align=\"center\">-1</td>\n<td align=\"center\">7</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\"><b>2</b></td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">next</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">4</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n<td align=\"center\">7</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<br>\n<ul>\n<li>\n<p>위 과정을 반복한다.</p>\n</li>\n<li>\n<p>2년전에 푼 문제인데 내가 풀었다기엔 어떻게 이렇게 푼건지 모르겠고 어디서 봤다기엔 검색을 해도 안나오고 한번에 맞췄다.</p>\n</li>\n</ul>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">int</span> prev<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        prev<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        next<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    prev<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\r\n    next<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">--</span>n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span>\r\n            i <span class=\"token operator\">=</span> next<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d, \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        next<span class=\"token punctuation\">[</span>prev<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        prev<span class=\"token punctuation\">[</span>next<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> prev<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d>\"</span><span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"May 31, 2019","title":"요세푸스 문제","categories":"알고리즘","author":"Jard","emoji":"🧢"},"fields":{"slug":"/algorithm/baekjoon/ac1158/"}},"prev":{"id":"c427de9f-322c-5afe-a96d-b2924326701e","html":"<p><a href=\"https://www.acmicpc.net/problem/1002\"><img src=\"https://d2gd6pc034wcta.cloudfront.net/images/logo@2x.png\" alt=\"백준\"></a></p>\n<div style=\"text-align:center\"><a href=\"https://www.acmicpc.net/problem/1002\">https://www.acmicpc.net/problem/1002</a></div>\n<hr>\n<ul>\n<li>\n<p>백승환과 조규현에게 류재명과의 거리를 구해 류재명이 있을 수 있는 위치를 구하는 좌표를 구하라고 한다.</p>\n</li>\n<li>\n<p>백승환과 조규현의 위치는 좌표점으로 제공된다.</p>\n</li>\n<li>\n<p>두 점에서 목표까지의 거리가 나와 있고 두 점간의 거리를 구해서 가장 큰 값과 세 거리의 합(sum)에서 가장 큰 값(max)을 뺀 값을 구한다.</p>\n</li>\n<li>\n<p>원의 방정식을 사용할것이다.</p>\n</li>\n<li>\n<p>백승환과 류재명의 거리 r1 , 조규현과 류재명의 거리 r2 , 백승환과 조규현의 거리 r3 라고 할때 조건을 따라가보자</p>\n<ul>\n<li>\n<p>r1과 r2가 같고 r3가 0이다 => r1과r2가 같은 위치 => 원이 완벽하게 겹쳐서 무수하게 많은 수 => -1</p>\n</li>\n<li>\n<p>r1 + r2 == r3 => r1로 그린 원과 r2로 그린 원의 중점의 거리가 r3일때 두 원은 한점에서 만나게 된다 => 1\r\n<img src=\"/media/ac1002/2.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p>r1+r2+r3-max = max => r3로 그린 원과 r1 또는 r2로 그린 원 하나가 내접 => 1\r\n<img src=\"/media/ac1002/4.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p>max>sum => 두 원의 지름보다 합의 거리가 더 기므로 원이 만나지 않음 => 0\r\n<img src=\"/media/ac1002/1.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p>앞의 조건을 다 피할 경우=> 두 원이 두 군데에서 겹치게 된다 => 2\r\n<img src=\"/media/ac1002/3.jpg\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapToInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token operator\">::</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">double</span> max <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> distance <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAsDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> distance <span class=\"token operator\">-</span> max<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> distance <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">==</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> sum <span class=\"token operator\">==</span> max<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">></span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>","frontmatter":{"date":"February 24, 2021","title":"터렛","categories":"알고리즘","author":"Jard","emoji":"🧢"},"fields":{"slug":"/algorithm/baekjoon/ac1002/"}},"site":{"siteMetadata":{"siteUrl":"https://blueti.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/algorithm/baekjoon/ac1018/","nextSlug":"/algorithm/baekjoon/ac1158/","prevSlug":"/algorithm/baekjoon/ac1002/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}